#AUTOGENERATED! DO NOT EDIT! File to edit: dev/00_core.ipynb (unless otherwise specified).

__all__ = ['stats', 'log_softmax', 'accuracy', 'error', 'nll', 'plotdist']

#Cell
def stats(x):
    "Returns `mean` and `std` of a tensor"
    return x.mean(),x.std()

#Cell
def log_softmax(x):

    return x - x.exp().sum(-1).log().unsqueeze(-1)

#Cell
def accuracy(pred,y):
    "Accuracy metric"
    return (pred.argmax(dim=1) == y).float().mean()

#Cell
def error(pred,y):
    "Error metric"
    return 1-accuracy(pred,y)

#Cell
def nll(pred,yb):
    "Negative Log Likelihood Loss function"
    return -pred[range(yb.shape[0]), yb].mean()

#Cell
def plotdist(x,showsigmas=True):
    "Plot distribution `x` with optional `showsigmas`"
    fig = plt.figure(figsize=(4,3))
    m,s = x.mean(), x.std()
    n,_,_ = plt.hist(x.reshape(-1),bins=100);
    l = [i*s for i in (-3,-2,-1,1,2,3)] # three sigmas
    l.append(m) # plus mean
    if showsigmas: plt.vlines(l, 0, n.max(), color='white', alpha=0.2)
    ax = plt.title(f'Mean = {round(float(m),3)}; $\sigma$ = {round(float(s),3)}');